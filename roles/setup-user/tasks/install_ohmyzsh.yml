---

# install script checks if the SHELL variable is set to .*/zsh
# because ansible task uses sudo the SHELL variable is taken from remote_user
# hard-code SHELL variable to /bin/zsh is safe:
# user's shell is set to zsh in above task "create user"
- name: oh-my-zsh
  shell: SHELL=/bin/zsh sh -c "$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)"
  become_user: "{{ user }}"
  tags: myzsh

- name: copy my .zsh files
  copy: src=./files/{{ item }}.zsh
        dest=/home/{{ user }}/.oh-my-zsh/custom
        owner={{ user }}
        group={{ user_group }}
        mode=0644
  with_items:
    - common-aliases
    - aliases
    - zle
  tags: ["myzsh", "alias"]

- name: workspace aliases
  template: src=./templates/alias-repos.j2
            dest=/home/{{ user }}/.oh-my-zsh/custom/repos-aliases.zsh
            owner={{ user }}
            group={{ user_group }}
            mode=0640
  tags: ["myzsh", "alias"]

# support the oh-my-zsh virutalenvwrapper plugin
# => automagically activates the venv when a git repo directory is entered 
- name: install virtualenvwrapper
  pip:
    name: virtualenvwrapper
    state: latest
  tags: myzsh

# first idea was to place a venv-wrapper.zsh in the .oh-my-zsh/custom folder
# but the oh-my-zsh virtualenvwrapper plugin runs source on virutalenvwrapper.sh
# so config has to happen before the plugin is loaded
- name: configure virtualenvwrapper
  lineinfile:
    dest: /home/{{ user }}/.zshrc
    insertbefore: "^plugins"
    line: "export WORKON_HOME={{ venv_home }}"
    state: present
  tags: myzsh

- name: enable my-zsh plugins
  lineinfile:
    dest: /home/{{ user }}/.zshrc
    regexp: "^plugins="
    line: "plugins=(git mvn jsontools sudo virtualenvwrapper)"
  tags: myzsh
